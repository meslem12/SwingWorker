/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.List;
import java.util.concurrent.CancellationException;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import worker.MyWorker;


/**
 *
 * @author levin
 */
public class MainGui extends javax.swing.JFrame implements PropertyChangeListener
{
  private MeasurmentWorker worker;
  
  /**
   * Creates new form MainGui
   */
  public MainGui ()
  {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints;

    jpenNorth = new javax.swing.JPanel();
    jbutStart = new javax.swing.JButton();
    jbutStop = new javax.swing.JButton();
    jbutCancel = new javax.swing.JButton();
    jpanCenter = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    jtaResults = new javax.swing.JTextArea();
    jpanSouth = new javax.swing.JPanel();
    jtfStatus = new javax.swing.JTextField();
    jpbProgress = new javax.swing.JProgressBar();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jbutStart.setText("Start");
    jbutStart.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutStartActionPerformed(evt);
      }
    });
    jpenNorth.add(jbutStart);

    jbutStop.setText("Stop");
    jbutStop.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutStopActionPerformed(evt);
      }
    });
    jpenNorth.add(jbutStop);

    jbutCancel.setText("Cancel");
    jbutCancel.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbutCancelActionPerformed(evt);
      }
    });
    jpenNorth.add(jbutCancel);

    getContentPane().add(jpenNorth, java.awt.BorderLayout.PAGE_START);

    jpanCenter.setLayout(new java.awt.GridLayout(1, 0));

    jtaResults.setColumns(20);
    jtaResults.setRows(5);
    jScrollPane1.setViewportView(jtaResults);

    jpanCenter.add(jScrollPane1);

    getContentPane().add(jpanCenter, java.awt.BorderLayout.CENTER);

    jpanSouth.setLayout(new java.awt.GridBagLayout());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 0.8;
    jpanSouth.add(jtfStatus, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 0.2;
    jpanSouth.add(jpbProgress, gridBagConstraints);

    getContentPane().add(jpanSouth, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jbutStartActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutStartActionPerformed
  {//GEN-HEADEREND:event_jbutStartActionPerformed
    jtaResults.setText(null);
    worker = new MeasurmentWorker();
    worker.addPropertyChangeListener(this);
    worker.execute();
  }//GEN-LAST:event_jbutStartActionPerformed

  private void jbutStopActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutStopActionPerformed
  {//GEN-HEADEREND:event_jbutStopActionPerformed
    worker.stop();
  }//GEN-LAST:event_jbutStopActionPerformed

  private void jbutCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbutCancelActionPerformed
  {//GEN-HEADEREND:event_jbutCancelActionPerformed
    worker.cancel(true);
  }//GEN-LAST:event_jbutCancelActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main (String args[])
  {
    /*
     * Set the Nimbus look and feel
     */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    }
    catch (ClassNotFoundException ex)
    {
      java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (InstantiationException ex)
    {
      java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (IllegalAccessException ex)
    {
      java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /*
     * Create and display the form
     */
    java.awt.EventQueue.invokeLater(new Runnable()
    {
      @Override
      public void run ()
      {
        new MainGui().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton jbutCancel;
  private javax.swing.JButton jbutStart;
  private javax.swing.JButton jbutStop;
  private javax.swing.JPanel jpanCenter;
  private javax.swing.JPanel jpanSouth;
  private javax.swing.JProgressBar jpbProgress;
  private javax.swing.JPanel jpenNorth;
  private javax.swing.JTextArea jtaResults;
  private javax.swing.JTextField jtfStatus;
  // End of variables declaration//GEN-END:variables

  
  private class MeasurmentWorker extends MyWorker
  {

    @Override
    protected void done ()
    {
      try
      {
        String result = jtaResults.getText();
        for (String s : get())
        {
          result = result + s + "\n";
        }
        jtaResults.setText(result);
        jtfStatus.setText("Messung erfolgreich");
      }
      catch (CancellationException ex) 
      {
        jtaResults.setText("Messung abgebrochen");
        jtfStatus.setText("Abbruch");
      }
      catch (Exception ex)
      {
        jpbProgress.setIndeterminate(false);
        JOptionPane.showMessageDialog(MainGui.this, ex.getMessage(), "Fehler...", JOptionPane.ERROR_MESSAGE);
        jtaResults.setText("Sorry, no results...");
        jtfStatus.setText("Error");
      }
      
    }
    
  }
  
  
  @Override
  public void propertyChange(PropertyChangeEvent evt)
  {
    System.out.println(evt);
    switch (evt.getPropertyName())
    {
      case "state":
        if (evt.getNewValue() == SwingWorker.StateValue.STARTED)
        {
          jpbProgress.setIndeterminate(true);
        }
        else
          jpbProgress.setIndeterminate(false);
        break;
        
      case "Status":
        jtfStatus.setText((String)evt.getNewValue());
        break;
    }
    
    
  }
}
